apiVersion: apps/v1
kind: Deployment
metadata:
  name: relay-server
  labels:
    app.kubernetes.io/part-of: paralus
    app.kubernetes.io/name: relay
    app.kubernetes.io/instance: paralus
    app.kubernetes.io/component: workload
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: relay
      app.kubernetes.io/instance: paralus
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: paralus
        app.kubernetes.io/name: relay
        app.kubernetes.io/instance: paralus
        app.kubernetes.io/component: workload
    spec:
      serviceAccountName: paralus-ztka
      securityContext: {}
      volumes:
        - name: relay-audit-logs
          emptyDir: {}
      containers:
        - name: relay-tail
          securityContext: {}
          image: 'paralusio/relay:v0.1.8'
          args: ['--mode', 'tail']
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: relay-audit-logs
              mountPath: /audit-logs
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: relay-server-config
        - name: relay-server
          securityContext: {}
          image: 'paralusio/relay:v0.1.8'
          args: ['--mode', 'server', '--log-level', '3']
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: relay-audit-logs
              mountPath: /audit-logs
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: relay-server-config
          ports:
            - name: https
              containerPort: 443
          resources: {}
