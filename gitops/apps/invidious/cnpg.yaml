apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: invidious-postgres
spec:
  instances: 1
  bootstrap:
    initdb:
      database: invidious
      owner: invidious
      secret:
        name: invidious-postgres
      postInitApplicationSQLRefs:
        configMapRefs:
          - name: invidious-postgresql-init
            key: playlists.sql
          - name: invidious-postgresql-init
            key: annotations.sql
          - name: invidious-postgresql-init
            key: channel_videos.sql
          - name: invidious-postgresql-init
            key: channels.sql
          - name: invidious-postgresql-init
            key: playlist_videos.sql
          - name: invidious-postgresql-init
            key: session_ids.sql
          - name: invidious-postgresql-init
            key: users.sql
          - name: invidious-postgresql-init
            key: videos.sql
  backup:
    barmanObjectStore:
      endpointURL: http://minio-frieren.minio.svc:9000
      destinationPath: "s3://cnpg/invidious"
      s3Credentials:
        accessKeyId:
          name: minio-credentials
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: minio-credentials
          key: ACCESS_SECRET_KEY
    retentionPolicy: "14d"
  storage:
    size: 8Gi
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: invidious
  namespace: invidious
spec:
  schedule: "0 0 12 * * *"
  backupOwnerReference: self
  cluster:
    name: invidious-postgres
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: minio-credentials
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: minio-credentials
  data:
    - secretKey: ACCESS_KEY_ID
      remoteRef:
        key: secrets/minio
        property: AWS_ACCESS_KEY_ID
    - secretKey: ACCESS_SECRET_KEY
      remoteRef:
        key: secrets/minio
        property: AWS_SECRET_ACCESS_KEY
